{
  "hash": "4a836fbfa78043399690a7f4c74b2154",
  "result": {
    "markdown": "---\ntitle: Rdatatable中tstrsplit的用法\nauthor: 波\ndate: '2017-08-16'\n---\n\n\n[data.table](http://rdatatable.com) 包中的 `tstrsplit` 函数可以用来把 data.frame 中的一列拆分成两列或多列。\n\n## 事先知道要拆成几列的情况\n\n平时会看到把年龄保存为数字加单位的形式，比如 \"12Y\", \"23D\", \"6M\". 这样的形式不利于过滤。此时就可以利用刚才提到的 'tstrsplit' 来把年龄列拆分成数值列和单位列，再进行下一步处理。\n\n首先建立一个示例用的 `data.table` :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(kableExtra)\ndtAge <- data.table(name = c('张三', '李四', '王五'),\n                 age = c('15Y', '10M', '23D'))\nkable_styling(knitr::kable(dtAge,'html'), bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> name </th>\n   <th style=\"text-align:left;\"> age </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 张三 </td>\n   <td style=\"text-align:left;\"> 15Y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 李四 </td>\n   <td style=\"text-align:left;\"> 10M </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 王五 </td>\n   <td style=\"text-align:left;\"> 23D </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n然后用 `gsub` 把数值和单位之间加上 `@` 符号：\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndtAge[, ageNew := gsub('(\\\\d+)', '\\\\1@', age)]\nknitr::kable(dtAge)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> name </th>\n   <th style=\"text-align:left;\"> age </th>\n   <th style=\"text-align:left;\"> ageNew </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 张三 </td>\n   <td style=\"text-align:left;\"> 15Y </td>\n   <td style=\"text-align:left;\"> 15@Y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 李四 </td>\n   <td style=\"text-align:left;\"> 10M </td>\n   <td style=\"text-align:left;\"> 10@M </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 王五 </td>\n   <td style=\"text-align:left;\"> 23D </td>\n   <td style=\"text-align:left;\"> 23@D </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n最后按照 `@` 拆分即可：\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndtAge[, c('ageValue', 'ageUnit') := tstrsplit(ageNew, '@')]\nknitr::kable(dtAge)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> name </th>\n   <th style=\"text-align:left;\"> age </th>\n   <th style=\"text-align:left;\"> ageNew </th>\n   <th style=\"text-align:left;\"> ageValue </th>\n   <th style=\"text-align:left;\"> ageUnit </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 张三 </td>\n   <td style=\"text-align:left;\"> 15Y </td>\n   <td style=\"text-align:left;\"> 15@Y </td>\n   <td style=\"text-align:left;\"> 15 </td>\n   <td style=\"text-align:left;\"> Y </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 李四 </td>\n   <td style=\"text-align:left;\"> 10M </td>\n   <td style=\"text-align:left;\"> 10@M </td>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:left;\"> M </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 王五 </td>\n   <td style=\"text-align:left;\"> 23D </td>\n   <td style=\"text-align:left;\"> 23@D </td>\n   <td style=\"text-align:left;\"> 23 </td>\n   <td style=\"text-align:left;\"> D </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## 事先不知道要拆成几列的情况\n\n前几天刚好遇到这样的情况，是关于病人按部位做CT的人次的表格。第一列是做的部位，胸部，腹部，脊柱等，这里存在一人同时做几个部位的情况，每个部位都要计算。第二列是扫描方式，是平扫还是增强。第三列是人次。\n\n1.  示例数据[^1]如下：\n\n[^1]: 不一定符合临床实际情况；\n\n\n::: {.cell}\n\n```{.r .cell-code}\n        library(data.table)\n        dtCT <- data.table(buWei = c('胸部,颈部', '腹部,腰椎,颈部', '关节,胸部', '颅脑'),\n                 fangShi = c('平扫', '平扫', '增强', '增强'),\n                 renCi = c(11, 22, 33, 44))\n        knitr::kable(dtCT)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> buWei </th>\n   <th style=\"text-align:left;\"> fangShi </th>\n   <th style=\"text-align:right;\"> renCi </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 胸部,颈部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 腹部,腰椎,颈部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 关节,胸部 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 颅脑 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n2.  计算出最多需要拆成几列：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    maxCol <- max(sapply(strsplit(dtCT$buWei,','),length))\n    maxCol\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n3.  拆成 3 列：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    dtCT[, paste0('buWei_', 1:maxCol) := tstrsplit(buWei, ',')][, buWei := NULL]\n    knitr::kable(dtCT)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> fangShi </th>\n   <th style=\"text-align:right;\"> renCi </th>\n   <th style=\"text-align:left;\"> buWei_1 </th>\n   <th style=\"text-align:left;\"> buWei_2 </th>\n   <th style=\"text-align:left;\"> buWei_3 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> 颈部 </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> 腹部 </td>\n   <td style=\"text-align:left;\"> 腰椎 </td>\n   <td style=\"text-align:left;\"> 颈部 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:left;\"> 关节 </td>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n   <td style=\"text-align:left;\"> 颅脑 </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n4.  用 `melt` 函数将部位转成一列：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    ans01 <- melt(dtCT, id.vars = c('fangShi', 'renCi'))[!is.na(value)]\n    ans01[, variable := NULL]\n    setnames(ans01, 'value', 'newBuWei')\n    setcolorder(ans01, c('newBuWei', 'fangShi', 'renCi'))\n    knitr::kable(ans01)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> newBuWei </th>\n   <th style=\"text-align:left;\"> fangShi </th>\n   <th style=\"text-align:right;\"> renCi </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 腹部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 关节 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 颅脑 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 颈部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 腰椎 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 颈部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n5.  按拆分后的部位和扫描方式汇总：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    ans02 <- ans01[, .(heJi = sum(renCi)), keyby = .(newBuWei, fangShi)]\n    knitr::kable(ans02)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> newBuWei </th>\n   <th style=\"text-align:left;\"> fangShi </th>\n   <th style=\"text-align:right;\"> heJi </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 关节 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 腰椎 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 腹部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 颅脑 </td>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 颈部 </td>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n上面 2, 3 两步，可以用 `splitstackshape` 包中的 `cSplit` 来实现，只需一步：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(splitstackshape)\ndtCT <- data.table(buWei = c('胸部,颈部', '腹部,腰椎,颈部', '关节,胸部', '颅脑'),\n                 fangShi = c('平扫', '平扫', '增强', '增强'),\n                 renCi = c(11, 22, 33, 44))\nknitr::kable(cSplit(dtCT, 'buWei', ','))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by the\ncaller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by the\ncaller; using TRUE\n\nWarning in type.convert.default(X[[i]], ...): 'as.is' should be specified by the\ncaller; using TRUE\n```\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> fangShi </th>\n   <th style=\"text-align:right;\"> renCi </th>\n   <th style=\"text-align:left;\"> buWei_1 </th>\n   <th style=\"text-align:left;\"> buWei_2 </th>\n   <th style=\"text-align:left;\"> buWei_3 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> 颈部 </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 平扫 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> 腹部 </td>\n   <td style=\"text-align:left;\"> 腰椎 </td>\n   <td style=\"text-align:left;\"> 颈部 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:left;\"> 关节 </td>\n   <td style=\"text-align:left;\"> 胸部 </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 增强 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n   <td style=\"text-align:left;\"> 颅脑 </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}