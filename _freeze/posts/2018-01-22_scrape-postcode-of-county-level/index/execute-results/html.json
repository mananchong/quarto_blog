{
  "hash": "b821ae0ad52bd23428500f052c89e23e",
  "result": {
    "markdown": "---\ntitle: \"抓取2016年省市县行政区划数据库\"\ndate: \"2018-01-22\"\ncategories:\n  - code\n  - rstats\n  - webscrape\n  - rdatatable\n---\n\n\n上报某项数据时，需要根据邮政编码来判断省份，于是在网上找了下，虽然不合要求，倒是可以拿来练习网页数据的抓取。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(stringi)\nlibrary(data.table)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndoc <- read_html(\"http://www.cnblogs.com/jiqing9006/p/5849874.html\")\nhead(doc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$node\n<pointer: 0x7f8e49b96d30>\n\n$doc\n<pointer: 0x7f8e49b5a110>\n```\n:::\n:::\n\n\n在浏览器的开发者工具里查看之后，发现需要的内容都在`<code>`这个`CSS`标签里，这样就可以取出需要的文本。\n\n\n::: {.cell}\n\n```{.r .cell-code}\npostCode <- html_node(doc, css = \"code\")\npostCode <- html_text(postCode)\n```\n:::\n\n\n查看上面`postCode`里的内容，发现里面有很多`\\n`，于是可以依此将文本分行。\n\n\n::: {.cell}\n\n```{.r .cell-code}\npostCodeLines <- stri_split_lines(postCode)\npostCodeLines <- postCodeLines[[1]]\nhead(postCodeLines, n = 40)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"--\"                                                                                                                   \n [2] \"-- 表的结构 `tf_area`\"                                                                                                \n [3] \"--\"                                                                                                                   \n [4] \"-- 创建时间： 2019-04-16 08:01:21\"                                                                                    \n [5] \"--\"                                                                                                                   \n [6] \"\"                                                                                                                     \n [7] \"DROP TABLE IF EXISTS `tf_area`;\"                                                                                      \n [8] \"CREATE TABLE IF NOT EXISTS `tf_area` (\"                                                                               \n [9] \"  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',\"                                                                 \n[10] \"  `pid` int(11) DEFAULT NULL COMMENT '父id',\"                                                                         \n[11] \"  `shortname` varchar(100) DEFAULT NULL COMMENT '简称',\"                                                              \n[12] \"  `name` varchar(100) DEFAULT NULL COMMENT '名称',\"                                                                   \n[13] \"  `merger_name` varchar(255) DEFAULT NULL COMMENT '全称',\"                                                            \n[14] \"  `level` tinyint(4) DEFAULT NULL COMMENT '层级 0 1 2 省市区县',\"                                                     \n[15] \"  `pinyin` varchar(100) DEFAULT NULL COMMENT '拼音',\"                                                                 \n[16] \"  `code` varchar(100) DEFAULT NULL COMMENT '长途区号',\"                                                               \n[17] \"  `zip_code` varchar(100) DEFAULT NULL COMMENT '邮编',\"                                                               \n[18] \"  PRIMARY KEY (`id`)\"                                                                                                 \n[19] \") ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='省市县区域表';\"                                                        \n[20] \"\"                                                                                                                     \n[21] \"--\"                                                                                                                   \n[22] \"-- RELATIONSHIPS FOR TABLE `tf_area`:\"                                                                                \n[23] \"--\"                                                                                                                   \n[24] \"\"                                                                                                                     \n[25] \"--\"                                                                                                                   \n[26] \"-- 转存表中的数据 `tf_area`\"                                                                                          \n[27] \"--\"                                                                                                                   \n[28] \"\"                                                                                                                     \n[29] \"INSERT INTO `tf_area` (`id`, `pid`, `shortname`, `name`, `merger_name`, `level`, `pinyin`, `code`, `zip_code`) VALUES\"\n[30] \"(1, 0, '北京', '北京', '中国,北京', 1, 'beijing', '', ''),\"                                                           \n[31] \"(2, 1, '北京', '北京市', '中国,北京,北京市', 2, 'beijing', '010', '100000'),\"                                         \n[32] \"(3, 2, '东城', '东城区', '中国,北京,北京市,东城区', 3, 'dongcheng', '010', '100010'),\"                                \n[33] \"(4, 2, '西城', '西城区', '中国,北京,北京市,西城区', 3, 'xicheng', '010', '100032'),\"                                  \n[34] \"(5, 2, '朝阳', '朝阳区', '中国,北京,北京市,朝阳区', 3, 'chaoyang', '010', '100020'),\"                                 \n[35] \"(6, 2, '丰台', '丰台区', '中国,北京,北京市,丰台区', 3, 'fengtai', '010', '100071'),\"                                  \n[36] \"(7, 2, '石景山', '石景山区', '中国,北京,北京市,石景山区', 3, 'shijingshan', '010', '100043'),\"                        \n[37] \"(8, 2, '海淀', '海淀区', '中国,北京,北京市,海淀区', 3, 'haidian', '010', '100089'),\"                                  \n[38] \"(9, 2, '门头沟', '门头沟区', '中国,北京,北京市,门头沟区', 3, 'mentougou', '010', '102300'),\"                          \n[39] \"(10, 2, '房山', '房山区', '中国,北京,北京市,房山区', 3, 'fangshan', '010', '102488'),\"                                \n[40] \"(11, 2, '通州', '通州区', '中国,北京,北京市,通州区', 3, 'tongzhou', '010', '101149'),\"                                \n```\n:::\n\n```{.r .cell-code}\ntail(postCodeLines)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"(3746, 3745, '嘉模堂区', '嘉模堂区', '中国,澳门特别行政区,氹仔岛,嘉模堂区', 3, 'ourladyofcarmel\\\\'sparish', '00853', '999078'),\"            \n[2] \"(3747, 3738, '路环岛', '路环岛', '中国,澳门特别行政区,路环岛', 2, 'coloane', '00853', '999078'),\"                                           \n[3] \"(3748, 3747, '圣方济各堂区', '圣方济各堂区', '中国,澳门特别行政区,路环岛,圣方济各堂区', 3, 'stfrancisxavier\\\\'sparish', '00853', '999078'),\"\n[4] \"(3749, 0, '钓鱼岛', '钓鱼岛', '中国,钓鱼岛', 1, 'diaoyudao', '', '');\"                                                                      \n[5] \"\"                                                                                                                                           \n[6] \"\"                                                                                                                                           \n```\n:::\n:::\n\n\n从上面的输出可以看到，第 9 到 17 行可以提取出字段的英文名和中文名，第 30 到倒数第 2 行是各个县区的具体内容。\n\n先提取字段名\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheader <- postCodeLines[9:17]\nheaderEn <- stri_extract_first_regex(header, \"(?<=`).*(?=`)\")\nheaderCn <- stri_extract_first_regex(header, \"(?<=').*(?=')\")\ncounties <- postCodeLines[30:(length(postCodeLines) - 2)]\ncounties <- stri_extract_first_regex(counties, \"(?<=\\\\().*(?=\\\\))\")\ntmpFile <- tempfile(fileext = \".csv\")\nwriteLines(counties, tmpFile)\nans <- fread(\n    tmpFile,\n    sep = \",\",\n    quote = \"\\'\",\n    col.names = headerEn\n)\nknitr::kable(head(ans))\n```\n\n::: {.cell-output-display}\n|id |pid |shortname |name   |merger_name             |level |pinyin    |code |zip_code |\n|:--|:---|:---------|:------|:-----------------------|:-----|:---------|:----|:--------|\n|1  |0   |北京      |北京   |中国,北京               |1     |beijing   |     |         |\n|2  |1   |北京      |北京市 |中国,北京,北京市        |2     |beijing   |010  |100000   |\n|3  |2   |东城      |东城区 |中国,北京,北京市,东城区 |3     |dongcheng |010  |100010   |\n|4  |2   |西城      |西城区 |中国,北京,北京市,西城区 |3     |xicheng   |010  |100032   |\n|5  |2   |朝阳      |朝阳区 |中国,北京,北京市,朝阳区 |3     |chaoyang  |010  |100020   |\n|6  |2   |丰台      |丰台区 |中国,北京,北京市,丰台区 |3     |fengtai   |010  |100071   |\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}